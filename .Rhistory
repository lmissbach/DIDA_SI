P.10.Ba.4 <- plotting_ten.1(Incidence.Bangladesh.1, adjust_1 = 0.25, "Bangladesh",  ATY = element_text(size = 6, vjust = 0.1), ATX = element_blank(),         ATT = element_text(size = 7),          XLAB = "", YLAB = "Share of Households per Quintile")$Plot_4
P.10.Ii.4 <- plotting_ten.1(Incidence.India.1,      adjust_1 = 0.12, "India",       ATY = element_blank(),                      ATX = element_blank(),         ATT = element_blank(),          XLAB = "")$Plot_4
P.10.Io.4 <- plotting_ten.1(Incidence.Indonesia.1,  adjust_1 = 0.15, "Indonesia",   ATY = element_blank(),                      ATX = element_blank(),         ATT = element_blank(),          XLAB = "")$Plot_4
P.10.Pa.4 <- plotting_ten.1(Incidence.Pakistan.1,   adjust_1 = 0.15, "Pakistan",    ATY = element_blank(),                      ATX = element_blank() ,        ATT = element_blank(),          XLAB = "")$Plot_4
P.10.Ph.4 <- plotting_ten.1(Incidence.Philippines.1,adjust_1 = 0.3, "Philippines",  ATY = element_text(size = 6, vjust = 0.1), ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence", YLAB = "Share of Households per Quintile")$Plot_4
P.10.Th.4 <- plotting_ten.1(Incidence.Thailand.1,   adjust_1 = 0.15, "Thailand",    ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence")$Plot_4
P.10.Tu.4 <- plotting_ten.1(Incidence.Turkey.1,     adjust_1 = 0.15, "Turkey",      ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence")$Plot_4
P.10.Vi.4 <- plotting_ten.1(Incidence.Vietnam.1,    adjust_1 = 0.3, "Vietnam",     ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence")$Plot_4
P.10 <- cowplot::align_plots(P.10.Ba.4, P.10.Ii.4, P.10.Io.4, P.10.Pa.4, P.10.Ph.4, P.10.Th.4, P.10.Tu.4, P.10.Vi.4, align = "hv")
s.1 <- ggdraw(P.10[[1]])
s.2 <- ggdraw(P.10[[2]])
s.3 <- ggdraw(P.10[[3]])
s.4 <- ggdraw(P.10[[4]])
s.5 <- ggdraw(P.10[[5]])
s.6 <- ggdraw(P.10[[6]])
s.7 <- ggdraw(P.10[[7]])
s.8 <- ggdraw(P.10[[8]])
plotting_ten.1 <- function(Incidence.X, Country.Name, fill0 = FALSE, ATY = element_blank(), ATX = element_text(size = 20), ATT = element_text(size = 25), XLAB = "", YLAB = "", YLIM = 0.01, adjust_1 = 0.2){
adjust_0 <- adjust_1
# Round Values up, calculate households per bins
Incidence.X0 <- Incidence.X %>%
filter(Income_Group_5 != 0)%>%
mutate(burden_CO2_within_per_capita = round(burden_CO2_within_per_capita,3))%>%
group_by(Income_Group_5, Urban, burden_CO2_within_per_capita)%>%
summarise(weights = sum(hh_weights))%>%
ungroup()
# Calculate total households
IG_weights <- Incidence.X %>%
filter(Income_Group_5 != 0)%>%
group_by(Income_Group_5, Urban)%>%
summarise(IG_weights = sum(hh_weights))%>%
ungroup()
# Calculate Shares
Incidence.X0 <- left_join(Incidence.X0, IG_weights)%>%
mutate(share = weights/IG_weights)
# Select Subsamples
Incidence.X1 <- Incidence.X0 %>%
filter(Urban == "Urban")
Incidence.X2 <- Incidence.X0 %>%
filter(Urban == "Rural")
Incidence.X3 <- Incidence.X0 %>%
filter(Urban == "Country")
#Calculate Median
Median.X1 <- calculate_median(Incidence.X1)
Median.X2 <- calculate_median(Incidence.X2)
Median.X3 <- calculate_median(Incidence.X3)
# Calculate Median Y
t.X.1 <- calculate_median_y(Incidence.X1, Median.X1, adjust_0)
t.X.2 <- calculate_median_y(Incidence.X2, Median.X2, adjust_0)
t.X.3 <- calculate_median_y(Incidence.X3, Median.X3, adjust_0)
Incidence.X1.1 <- Incidence.X1 %>%
left_join(t.X.1, by = c("Income_Group_5"))
Incidence.X2.1 <- Incidence.X2 %>%
left_join(t.X.2, by = c("Income_Group_5"))
Incidence.X3.1 <- Incidence.X3 %>%
left_join(t.X.3, by = c("Income_Group_5"))
max_median <- max(Incidence.X3.1$median.x)
min_median <- min(Incidence.X3.1$median.x)
P_3 <- ggplot(Incidence.X3.1, aes(group = factor(Income_Group_5), colour = factor(Income_Group_5), linetype = factor(Income_Group_5)))+
theme_bw()+
theme(axis.text.y = ATY, axis.text.x= ATX, axis.title = ATT, plot.title = element_text(size = 7), legend.position = "bottom", strip.text = element_text(size = 7), strip.text.y = element_text(angle = 180), panel.grid.major = element_line(size = 0.3), panel.grid.minor = element_blank(), axis.ticks = element_line(size = 0.2),
legend.text = element_text(size = 7), legend.title = element_text(size = 7), plot.margin = unit(c(0.1,0.1,0,0), "cm"), panel.border = element_rect(size = 0.3))+
annotate("rect", xmin = min_median, xmax = max_median, ymin = 0, ymax = 0.11, alpha = 0.5, fill = "grey")+
annotate("segment", x = min_median, xend = max_median, y = 0.098, yend = 0.098, arrow = arrow(ends = "both", angle = 90, length = unit (.05, "cm")), size = 0.2)+
annotate("text", x = (min_median + max_median)/2, y = 0.101, label = "paste(Delta, V)", parse = TRUE, size = 1.5)+
geom_point(aes(x = median.x, y = median.y, group = factor(Income_Group_5), fill = factor(Income_Group_5)), shape = 21, size = 1.3, stroke = 0.2, colour = "black")+
geom_smooth(aes(x = burden_CO2_within_per_capita, y = share), size = 0.3, method = "loess", n = 160, span = adjust_0, se = FALSE, fullrange = TRUE)+
xlab(XLAB)+ ylab(YLAB)+ labs(colour = "", linetype = "", fill = "")+
scale_y_continuous(breaks = c(0,0.05,0.1), expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1), breaks = seq(0,0.08, 0.02))+
coord_cartesian(xlim = c(0,0.085), ylim = c(0,0.105))+
#geom_segment(aes(x = median, xend = median, y = 0, yend = 100, colour = factor(Income_Group_5), linetype = factor(Income_Group_5)), size = 1)+
scale_colour_manual(  values = c("#BC3C29FF","#7876B1FF","#000000","#20854EFF",   "#0072B5FF"))+
scale_fill_manual(    values = c("#BC3C29FF","#7876B1FF","#000000","#20854EFF",   "#0072B5FF"))+
scale_linetype_manual(values = c("solid", "dashed", "dashed", "dashed", "solid"))+
ggtitle(Country.Name)+
#guides(fill = guide_legend("Expenditure Quintile"), colour = guide_legend("Expenditure Quintile"), linetype = guide_legend("Expenditure Quintile"))
guides(fill = fill0, colour = fill0, linetype = fill0)
Incidence.X.4 <- rbind(Incidence.X1.1, Incidence.X2.1)%>%
filter(Income_Group_5 == 1 | Income_Group_5 == 5)
P_4 <- ggplot(Incidence.X.4, aes(colour = factor(Income_Group_5), linetype = factor(Urban)))+
theme_bw()+
theme(axis.text.y = ATY, axis.text.x= ATX, axis.title = ATT, plot.title = element_text(size = 7), legend.position = "bottom", strip.text = element_text(size = 7), strip.text.y = element_text(angle = 180), panel.grid.major = element_line(size = 0.3), panel.grid.minor = element_blank(), axis.ticks = element_line(size = 0.2),
legend.text = element_text(size = 7), legend.title = element_text(size = 7), plot.margin = unit(c(0.1,0.1,0,0), "cm"), panel.border = element_rect(size = 0.3))+
geom_smooth(aes(x = burden_CO2_within_per_capita, y = share), size = 0.3, method = "loess", span = adjust_0, se = FALSE, n = 160, fullrange = TRUE)+
geom_point(aes(x = median.x, y = median.y, fill = factor(Income_Group_5), alpha = factor(Urban)), shape = 21, size = 1.3, stroke = 0.2, colour = "black")+
xlab(XLAB)+ ylab(YLAB)+ labs(colour = "", linetype = "", fill = "")+
scale_y_continuous(breaks = c(0,0.05, 0.1), expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_x_continuous(expand = c(0,0), breaks = seq(0,0.08, 0.02), labels = scales::percent_format(accuracy = 1))+
coord_cartesian(xlim = c(0,0.085), ylim = c(0,0.105))+
#geom_segment(aes(x = median, xend = median, y = 0, yend = 100, colour = factor(Income_Group_5), linetype = factor(Income_Group_5)), size = 1)+
scale_colour_manual(  values = c("#BC3C29FF", "#0072B5FF"))+
scale_fill_manual(    values = c("#BC3C29FF", "#0072B5FF"))+
scale_linetype_manual(values = c("solid", "dotted"))+
scale_alpha_manual(   values = c(1,0.5))+
ggtitle(Country.Name)+
guides(fill = guide_legend("Expenditure Quintile"), alpha = FALSE, colour = guide_legend("Expenditure Quintile"))
#guides(fill = fill0, colour = fill0, linetype = fill0, alpha = fill0)
Files <- list("Plot_3" = P_3, "Plot_4" = P_4)
return(Files)
}
P.10.Ba.4 <- plotting_ten.1(Incidence.Bangladesh.1, adjust_1 = 0.25, "Bangladesh",  ATY = element_text(size = 6, vjust = 0.1), ATX = element_blank(),         ATT = element_text(size = 7),          XLAB = "", YLAB = "Share of Households per Quintile")$Plot_4
P.10.Ii.4 <- plotting_ten.1(Incidence.India.1,      adjust_1 = 0.12, "India",       ATY = element_blank(),                      ATX = element_blank(),         ATT = element_blank(),          XLAB = "")$Plot_4
P.10.Io.4 <- plotting_ten.1(Incidence.Indonesia.1,  adjust_1 = 0.15, "Indonesia",   ATY = element_blank(),                      ATX = element_blank(),         ATT = element_blank(),          XLAB = "")$Plot_4
P.10.Pa.4 <- plotting_ten.1(Incidence.Pakistan.1,   adjust_1 = 0.15, "Pakistan",    ATY = element_blank(),                      ATX = element_blank() ,        ATT = element_blank(),          XLAB = "")$Plot_4
P.10.Ph.4 <- plotting_ten.1(Incidence.Philippines.1,adjust_1 = 0.3, "Philippines",  ATY = element_text(size = 6, vjust = 0.1), ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence", YLAB = "Share of Households per Quintile")$Plot_4
P.10.Th.4 <- plotting_ten.1(Incidence.Thailand.1,   adjust_1 = 0.15, "Thailand",    ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence")$Plot_4
P.10.Tu.4 <- plotting_ten.1(Incidence.Turkey.1,     adjust_1 = 0.15, "Turkey",      ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence")$Plot_4
P.10.Vi.4 <- plotting_ten.1(Incidence.Vietnam.1,    adjust_1 = 0.3, "Vietnam",     ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Carbon Price Incidence")$Plot_4
Figure_3 <- ggarrange(s.1, s.2, s.3, s.4, s.5, s.6, s.7, s.8, ncol = 4, nrow = 2, common.legend = TRUE, legend.grob = L.3, legend = "bottom")
pdf("Figure_3.pdf", width = 16.51/2.54, height = 10/2.54)
# run this with line 735 commented and with line 734 uncommented
L.3 <- get_legend(P.10.Ba.4)
Figure_3 <- ggarrange(s.1, s.2, s.3, s.4, s.5, s.6, s.7, s.8, ncol = 4, nrow = 2, common.legend = TRUE, legend.grob = L.3, legend = "bottom")
pdf("Figure_3.pdf", width = 16.51/2.54, height = 10/2.54)
Figure_3
dev.off()
pdf("Figures/Figure_3.pdf", width = 16.51/2.54, height = 10/2.54)
Figure_3
dev.off()
calculate_median <- function(x){
x <- x %>%
group_by(Income_Group_5, Type)%>%
arrange(value)%>%
mutate(cumsum_shares = cumsum(share))%>%
filter(cumsum_shares >= 0.5)%>%
slice(which.min(cumsum_shares))%>%
ungroup()%>%
rename(median = value)%>%
select(Income_Group_5, Type, median)
}
calculate_median_y <- function(x0, xmedian, adjust_0){
ggplot_build(ggplot(x0, aes(y = share, x = value, group = interaction(factor(Income_Group_5), Type)))+
geom_smooth(method = "loess", span = adjust_0, se = FALSE, n = 700))$data[[1]]%>%
select(x,y,group)%>%
mutate(group = ifelse(group == 1, 1, 5))%>%
left_join(xmedian, by = c("group" = "Income_Group_5"))%>%
mutate(help = median - x)%>%
mutate(help_0 = ifelse(help <0, help*-1, help))%>%
group_by(group)%>%
filter(help_0 == min(help_0))%>%
ungroup()%>%
rename(Income_Group_5 = group, median.x = x, median.y = y)%>%
select(-median, -help, -help_0)%>%
select(median.x, median.y, Income_Group_5)
}
plotting_ten.1 <- function(Incidence.X, Country.Name, fill0 = FALSE, ATY = element_blank(), ATX = element_text(size = 6), ATT = element_text(size = 7), XLAB = "", YLAB = "", YLIM = 0.01, adjust_1 = 0.2){
adjust_0 <- adjust_1
# Round Values up, calculate households per bins
Incidence.X0 <- Incidence.X %>%
select(hh_id, hh_weights, Income_Group_5, burden_CO2_within_per_capita, burden_CO2_within_pc_LST_pc)%>%
pivot_longer(starts_with("burden"), names_to = "type", values_to = "value")%>%
filter(Income_Group_5 == 1 | Income_Group_5 == 5)%>%
filter(!is.na(value) & value != "-Inf" & value > -0.5 & value != "Inf" & value < 0.5)%>%
#mutate(value = value*(-1))%>%
mutate(Type = ifelse(type == "burden_CO2_within_per_capita", "National Carbon Price", "National Carbon Price and equal per capita transfer"),
value = round(value,3))%>%
group_by(Income_Group_5, Type, value)%>%
summarise(weights = sum(hh_weights))%>%
ungroup()
# Calculate total households
IG_weights <- Incidence.X %>%
select(hh_id, Income_Group_5, hh_weights)%>%
group_by(Income_Group_5)%>%
summarise(IG_weights = sum(hh_weights))%>%
ungroup()
# Calculate Shares
Incidence.X1 <- left_join(Incidence.X0, IG_weights)%>%
mutate(share = weights/IG_weights)%>%
filter(Type == "National Carbon Price")
Incidence.X2 <- left_join(Incidence.X0, IG_weights)%>%
mutate(share = weights/IG_weights)%>%
filter(Type != "National Carbon Price")
#Calculate Median
Median.X1 <- calculate_median(Incidence.X1)%>%
filter(Type == "National Carbon Price")
Median.X2 <- calculate_median(Incidence.X2)%>%
filter(Type != "National Carbon Price")
# Calculate Median Y
t.X.1 <- calculate_median_y(Incidence.X1, Median.X1, adjust_0)
t.X.2 <- calculate_median_y(Incidence.X2, Median.X2, adjust_0)
Incidence.X1.1 <- Incidence.X1 %>%
left_join(t.X.1, by = c("Income_Group_5"))
Incidence.X2.1 <- Incidence.X2 %>%
left_join(t.X.2, by = "Income_Group_5")
Incidence.X3.1 <- bind_rows(Incidence.X1.1, Incidence.X2.1)%>%
mutate(Label = ifelse(Income_Group_5 == 1 & Type == "National Carbon Price", "National Carbon Price (Expenditure Quintile 1)",
ifelse(Income_Group_5 == "5" & Type == "National Carbon Price", "National Carbon Price (Expenditure Quintile 5)",
ifelse(Income_Group_5 == "1" & Type == "National Carbon Price and equal per capita transfer", "National Carbon Price and equal per capita Transfer (Expenditure Quintile 1)",
"National Carbon Price and equal per capita Transfer (Expenditure Quintile 5)"))))
P_3 <- ggplot(Incidence.X3.1, aes(colour = Label, linetype = Label))+
theme_bw()+
geom_vline(aes(xintercept = 0), size = 0.3)+
theme(axis.text.y = ATY, axis.text.x= ATX, axis.title = ATT, plot.title = element_text(size = 7), legend.position = "bottom", strip.text = element_text(size = 7), strip.text.y = element_text(angle = 180), panel.grid.major = element_line(size = 0.3), panel.grid.minor = element_blank(), axis.ticks = element_line(size = 0.2),
legend.text = element_text(size = 7), legend.title = element_text(size = 7), plot.margin = unit(c(0.1,0.1,0,0), "cm"), panel.border = element_rect(size = 0.3))+
geom_smooth(aes(x = value, y = share, group = Label), size = 0.3, method = "loess", n = 500, span = adjust_0, se = FALSE, fullrange = TRUE)+
geom_point(aes(x = median.x, y = median.y, group = Label, fill = Label), shape = 21, size = 1.3, colour = "black", stroke = 0.2)+
xlab(XLAB)+ ylab(YLAB)+ labs(colour = "", linetype = "", fill = "")+
scale_y_continuous(breaks = c(0,0.05,0.1), expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1), breaks = seq(-0.1,0.15, 0.05))+
coord_cartesian(xlim = c(-0.085,0.165), ylim = c(0,0.1))+
#geom_segment(aes(x = median, xend = median, y = 0, yend = 100, colour = factor(Income_Group_5), linetype = factor(Income_Group_5)), size = 1)+
scale_colour_manual(  values = c("#BC3C29FF", "#0072B5FF", "#BC3C29FF", "#0072B5FF"))+
scale_fill_manual(    values = c("#BC3C29FF", "#0072B5FF", "#BC3C29FF", "#0072B5FF"))+
scale_linetype_manual(values = c("solid", "solid", "dashed", "dashed"))+
ggtitle(Country.Name)+
#guides(fill = guide_legend("", nrow = 4), colour = guide_legend("", nrow = 4), linetype = guide_legend("", nrow = 4), direction = "vertical")
guides(fill = fill0, colour = fill0, linetype = fill0)
return(P_3)
}
P.10.Ba.3 <- plotting_ten.1(Incidence.Bangladesh.2.2.1,  adjust_1 =  0.2,  "Bangladesh",  ATY = element_text(size = 6, vjust = 0.1),  ATX = element_blank(),         ATT = element_text(size = 7),          XLAB = "", YLAB = "Share of Households per Quintile")
P.10.Ii.3 <- plotting_ten.1(Incidence.India.2.2.1,       adjust_1 =  0.1,  "India",       ATY = element_blank(),                      ATX = element_blank(),         ATT = element_blank(),          XLAB = "")
P.10.Io.3 <- plotting_ten.1(Incidence.Indonesia.2.2.1,   adjust_1 =  0.1,  "Indonesia",   ATY = element_blank(),                      ATX = element_blank(),         ATT = element_blank(),          XLAB = "")
P.10.Pa.3 <- plotting_ten.1(Incidence.Pakistan.2.2.1,    adjust_1 =  0.1,  "Pakistan",    ATY = element_blank(),                      ATX = element_blank() ,        ATT = element_blank(),          XLAB = "")
P.10.Ph.3 <- plotting_ten.1(Incidence.Philippines.2.2.1, adjust_1 =  0.35, "Philippines", ATY = element_text(size = 6, vjust = 0.1),  ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Household Budget Change", YLAB = "Share of Households per Quintile")
P.10.Th.3 <- plotting_ten.1(Incidence.Thailand.2.2.1,    adjust_1 =  0.15, "Thailand",    ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Household Budget Change")
P.10.Tu.3 <- plotting_ten.1(Incidence.Turkey.2.2.1,      adjust_1 =  0.12, "Turkey",      ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Household Budget Change")
P.10.Vi.3 <- plotting_ten.1(Incidence.Vietnam.2.2.1,                       "Vietnam",     ATY = element_blank(),                      ATX = element_text(size = 6), ATT = element_text(size = 7),  XLAB = "Household Budget Change")
P.10 <- cowplot::align_plots(P.10.Ba.3, P.10.Ii.3, P.10.Io.3, P.10.Pa.3, P.10.Ph.3, P.10.Th.3, P.10.Tu.3, P.10.Vi.3, align = "hv")
s.1 <- ggdraw(P.10[[1]])
s.2 <- ggdraw(P.10[[2]])
s.3 <- ggdraw(P.10[[3]])
s.4 <- ggdraw(P.10[[4]])
s.5 <- ggdraw(P.10[[5]])
s.6 <- ggdraw(P.10[[6]])
s.7 <- ggdraw(P.10[[7]])
s.8 <- ggdraw(P.10[[8]])
plotting_ten.1 <- function(Incidence.X, Country.Name, fill0 = FALSE, ATY = element_blank(), ATX = element_text(size = 6), ATT = element_text(size = 7), XLAB = "", YLAB = "", YLIM = 0.01, adjust_1 = 0.2){
adjust_0 <- adjust_1
# Round Values up, calculate households per bins
Incidence.X0 <- Incidence.X %>%
select(hh_id, hh_weights, Income_Group_5, burden_CO2_within_per_capita, burden_CO2_within_pc_LST_pc)%>%
pivot_longer(starts_with("burden"), names_to = "type", values_to = "value")%>%
filter(Income_Group_5 == 1 | Income_Group_5 == 5)%>%
filter(!is.na(value) & value != "-Inf" & value > -0.5 & value != "Inf" & value < 0.5)%>%
#mutate(value = value*(-1))%>%
mutate(Type = ifelse(type == "burden_CO2_within_per_capita", "National Carbon Price", "National Carbon Price and equal per capita transfer"),
value = round(value,3))%>%
group_by(Income_Group_5, Type, value)%>%
summarise(weights = sum(hh_weights))%>%
ungroup()
# Calculate total households
IG_weights <- Incidence.X %>%
select(hh_id, Income_Group_5, hh_weights)%>%
group_by(Income_Group_5)%>%
summarise(IG_weights = sum(hh_weights))%>%
ungroup()
# Calculate Shares
Incidence.X1 <- left_join(Incidence.X0, IG_weights)%>%
mutate(share = weights/IG_weights)%>%
filter(Type == "National Carbon Price")
Incidence.X2 <- left_join(Incidence.X0, IG_weights)%>%
mutate(share = weights/IG_weights)%>%
filter(Type != "National Carbon Price")
#Calculate Median
Median.X1 <- calculate_median(Incidence.X1)%>%
filter(Type == "National Carbon Price")
Median.X2 <- calculate_median(Incidence.X2)%>%
filter(Type != "National Carbon Price")
# Calculate Median Y
t.X.1 <- calculate_median_y(Incidence.X1, Median.X1, adjust_0)
t.X.2 <- calculate_median_y(Incidence.X2, Median.X2, adjust_0)
Incidence.X1.1 <- Incidence.X1 %>%
left_join(t.X.1, by = c("Income_Group_5"))
Incidence.X2.1 <- Incidence.X2 %>%
left_join(t.X.2, by = "Income_Group_5")
Incidence.X3.1 <- bind_rows(Incidence.X1.1, Incidence.X2.1)%>%
mutate(Label = ifelse(Income_Group_5 == 1 & Type == "National Carbon Price", "National Carbon Price (Expenditure Quintile 1)",
ifelse(Income_Group_5 == "5" & Type == "National Carbon Price", "National Carbon Price (Expenditure Quintile 5)",
ifelse(Income_Group_5 == "1" & Type == "National Carbon Price and equal per capita transfer", "National Carbon Price and equal per capita Transfer (Expenditure Quintile 1)",
"National Carbon Price and equal per capita Transfer (Expenditure Quintile 5)"))))
P_3 <- ggplot(Incidence.X3.1, aes(colour = Label, linetype = Label))+
theme_bw()+
geom_vline(aes(xintercept = 0), size = 0.3)+
theme(axis.text.y = ATY, axis.text.x= ATX, axis.title = ATT, plot.title = element_text(size = 7), legend.position = "bottom", strip.text = element_text(size = 7), strip.text.y = element_text(angle = 180), panel.grid.major = element_line(size = 0.3), panel.grid.minor = element_blank(), axis.ticks = element_line(size = 0.2),
legend.text = element_text(size = 7), legend.title = element_text(size = 7), plot.margin = unit(c(0.1,0.1,0,0), "cm"), panel.border = element_rect(size = 0.3))+
geom_smooth(aes(x = value, y = share, group = Label), size = 0.3, method = "loess", n = 500, span = adjust_0, se = FALSE, fullrange = TRUE)+
geom_point(aes(x = median.x, y = median.y, group = Label, fill = Label), shape = 21, size = 1.3, colour = "black", stroke = 0.2)+
xlab(XLAB)+ ylab(YLAB)+ labs(colour = "", linetype = "", fill = "")+
scale_y_continuous(breaks = c(0,0.05,0.1), expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1), breaks = seq(-0.1,0.15, 0.05))+
coord_cartesian(xlim = c(-0.085,0.165), ylim = c(0,0.1))+
#geom_segment(aes(x = median, xend = median, y = 0, yend = 100, colour = factor(Income_Group_5), linetype = factor(Income_Group_5)), size = 1)+
scale_colour_manual(  values = c("#BC3C29FF", "#0072B5FF", "#BC3C29FF", "#0072B5FF"))+
scale_fill_manual(    values = c("#BC3C29FF", "#0072B5FF", "#BC3C29FF", "#0072B5FF"))+
scale_linetype_manual(values = c("solid", "solid", "dashed", "dashed"))+
ggtitle(Country.Name)+
guides(fill = guide_legend("", nrow = 4), colour = guide_legend("", nrow = 4), linetype = guide_legend("", nrow = 4), direction = "vertical")
#guides(fill = fill0, colour = fill0, linetype = fill0)
return(P_3)
}
P.10.Ba.3 <- plotting_ten.1(Incidence.Bangladesh.2.2.1,  adjust_1 =  0.2,  "Bangladesh",  ATY = element_text(size = 6, vjust = 0.1),  ATX = element_blank(),         ATT = element_text(size = 7),          XLAB = "", YLAB = "Share of Households per Quintile")
# run this with line 1070 uncommented and line 1071 commented
L.7 <- get_legend(P.10.Ba.3)
Figure_6 <- ggarrange(s.1, s.2, s.3, s.4, s.5, s.6, s.7, s.8, ncol = 4, nrow = 2, common.legend = TRUE, legend.grob = L.7, legend = "bottom")
Figure_6 <- ggarrange(s.1, s.2, s.3, s.4, s.5, s.6, s.7, s.8, ncol = 4, nrow = 2, common.legend = TRUE, legend.grob = L.7, legend = "bottom")
pdf("Figures/Figure_6.pdf", width = 16.51/2.54, height = 11.75/2.54)
Figure_6
dev.off()
plotting_one_plus_two <- function(Incidence.X, Country.Name, fill0 = FALSE, ATY = element_blank(), ATX = element_text(size = 20), ATT = element_text(size = 25), XLAB = ""){
Incidence.X <- Incidence.X %>%
mutate(Urban = factor(Urban, levels = c("Rural", "Urban", "National")))
P <- ggplot(Incidence.X, aes(x = Urban, fill = Urban))+
facet_grid(IG_new ~., switch = "y")+
geom_boxplot(aes(ymin = y5, lower = y25, middle = y50, upper = y75, ymax = y95), width = 0.75,stat = "identity", outlier.shape = NA, size = 1) +
geom_point(aes(y = mean), shape = 23, size = 3, fill = "white")+
coord_flip(ylim = c(0, 0.15))+
theme_bw() +
xlab(XLAB)+ labs(fill = "")+ ylab ("")+ ggtitle(Country.Name)+
guides(fill = guide_legend(reverse = TRUE))+
# guides(fill = FALSE)+
theme(axis.text.y = element_blank(), axis.text.x = ATY, axis.ticks.y = element_blank(), axis.title.y = ATT, plot.title = element_text(size = 50), legend.position = "bottom", strip.text.y = element_text(size = 30, angle = 180), strip.background = element_rect(colour = "black", size = 1.5), panel.border = element_rect(size = 1.5), panel.grid.major = element_line(size = 1))+
scale_y_continuous(labels = scales::percent_format(accuracy = 1), position = "left")+
scale_x_discrete(position = "bottom")+
# scale_fill_manual(values = c("white", "white", "#E18727FF"))
scale_fill_manual(values = c("#BC3C29FF", "#0072B5FF", "#E18727FF"))
return(P)
}
P1.6.B <- plotting_one_plus_two(Incidence.Bangladesh.1.5, "Bangladesh", ATY = element_blank(), ATX = element_text(size = 30), ATT = element_text(size = 30), XLAB = "Expenditure Quintile")
P1.6.B
vertical_horizontal <- function(Incidence_Country, Country.Name){
Incidence.X <- Incidence_Country %>%
select(hh_id, hh_weights, burden_CO2_within_per_capita, Income_Group_5)%>%
group_by(Income_Group_5)%>%
summarise(y1  = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.01),
y5  = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.05),
y20 = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.20),
y50 = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.50),
y80 = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.80),
y95 = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.95),
y99 = wtd.quantile(burden_CO2_within_per_capita, weights = hh_weights, probs = 0.99),
sd =  sqrt(wtd.var(burden_CO2_within_per_capita,      weights = hh_weights)),
mean = wtd.mean(burden_CO2_within_per_capita,    weights = hh_weights))%>%
ungroup()
Incidence.1.1 <- Incidence.X %>%
select(Income_Group_5, y5, y95)%>%
mutate(dif = y95-y5)%>%
select(-y5, - y95)%>%
spread(key = Income_Group_5, value = dif)%>%
mutate(Country = Country.Name)%>%
select(Country, everything())
Incidence.1.2 <- Incidence.X %>%
select(Income_Group_5, y20, y80)%>%
mutate(dif = y80-y20)%>%
select(-y20, - y80)%>%
spread(key = Income_Group_5, value = dif)%>%
mutate(Country = Country.Name)%>%
select(Country, everything())
Incidence.1.3 <- Incidence.X %>%
select(Income_Group_5, y1, y99)%>%
mutate(dif = y99-y1)%>%
select(-y1, - y99)%>%
spread(key = Income_Group_5, value = dif)%>%
mutate(Country = Country.Name)%>%
select(Country, everything())
Incidence.1.4 <- Incidence.X %>%
select(Income_Group_5, sd)%>%
spread(key = Income_Group_5, value = sd)%>%
mutate(Country = Country.Name)%>%
select(Country, everything())
Incidence.2 <- Incidence.X %>%
select(Income_Group_5, y50)%>%
mutate(fact = ifelse(y50 == max(y50),1,
ifelse(y50 == min(y50),2,0)))%>%
filter(fact != 0)
Incidence.2.1 <- Incidence.2 %>%
filter(fact == 1)%>%
rename(Quintile_Max = Income_Group_5, max = y50)%>%
select(-fact)%>%
mutate(Country = Country.Name)
Incidence.2.2 <- Incidence.2 %>%
filter(fact == 2)%>%
rename(Quintile_Min = Income_Group_5, min = y50)%>%
select(-fact)%>%
mutate(Country = Country.Name)
Incidence.2.0 <- left_join(Incidence.2.1, Incidence.2.2, by = "Country")%>%
select(Country, Quintile_Min, Quintile_Max, min, max)%>%
mutate(Difference = max - min)%>%
select(-max, -min)
Incidence.3 <- Incidence.X %>%
select(Income_Group_5, mean)%>%
mutate(fact = ifelse(mean == max(mean),1,
ifelse(mean == min(mean),2,0)))%>%
filter(fact != 0)
Incidence.3.1 <- Incidence.3 %>%
filter(fact == 1)%>%
rename(Quintile_Max = Income_Group_5, max = mean)%>%
select(-fact)%>%
mutate(Country = Country.Name)
Incidence.3.2 <- Incidence.3 %>%
filter(fact == 2)%>%
rename(Quintile_Min = Income_Group_5, min = mean)%>%
select(-fact)%>%
mutate(Country = Country.Name)
Incidence.3.0 <- left_join(Incidence.3.1, Incidence.3.2, by = "Country")%>%
select(Country, Quintile_Min, Quintile_Max, min, max)%>%
mutate(Difference = max - min)%>%
select(-max, -min)
Incidence_0.1 <- left_join(Incidence.2.0, Incidence.1.1, by = "Country")
Incidence_0.2 <- left_join(Incidence.2.0, Incidence.1.2, by = "Country")
Incidence_0.3 <- left_join(Incidence.2.0, Incidence.1.3, by = "Country")
Incidence_0.4 <- left_join(Incidence.3.0, Incidence.1.4, by = "Country")
Incidence_0 <- list("5_95" = Incidence_0.1, "20_80" = Incidence_0.2,
"1_99" = Incidence_0.3, "sd"   = Incidence_0.4)
return(Incidence_0)
}
vh_BAN_0 <- vertical_horizontal(Incidence.Bangladesh, "Bangladesh"  )
vh_INI_0 <- vertical_horizontal(Incidence.India,      "India"       )
vh_INO_0 <- vertical_horizontal(Incidence.Indonesia,  "Indonesia"   )
vh_PAK_0 <- vertical_horizontal(Incidence.Pakistan,   "Pakistan"    )
vh_PHI_0 <- vertical_horizontal(Incidence.Philippines, "Philippines")
vh_THA_0 <- vertical_horizontal(Incidence.Thailand,   "Thailand"    )
vh_TUR_0 <- vertical_horizontal(Incidence.Turkey,     "Turkey"      )
vh_VIE_0 <- vertical_horizontal(Incidence.Vietnam,    "Vietnam"     )
vh_BAN <- vh_BAN_0$'5_95'
vh_INI <- vh_INI_0$'5_95'
vh_INO <- vh_INO_0$'5_95'
vh_PAK <- vh_PAK_0$'5_95'
vh_PHI <- vh_PHI_0$'5_95'
vh_THA <- vh_THA_0$'5_95'
vh_TUR <- vh_TUR_0$'5_95'
vh_VIE <- vh_VIE_0$'5_95'
vh_total_5 <- rbind(vh_BAN, vh_INI, vh_INO, vh_PAK, vh_PHI, vh_THA, vh_TUR, vh_VIE)
vh_BAN <- vh_BAN_0$'1_99'
vh_INI <- vh_INI_0$'1_99'
vh_INO <- vh_INO_0$'1_99'
vh_PAK <- vh_PAK_0$'1_99'
vh_PHI <- vh_PHI_0$'1_99'
vh_THA <- vh_THA_0$'1_99'
vh_TUR <- vh_TUR_0$'1_99'
vh_VIE <- vh_VIE_0$'1_99'
vh_total_1 <- rbind(vh_BAN, vh_INI, vh_INO, vh_PAK, vh_PHI, vh_THA, vh_TUR, vh_VIE)
vh_BAN <- vh_BAN_0$'20_80'
vh_INI <- vh_INI_0$'20_80'
vh_INO <- vh_INO_0$'20_80'
vh_PAK <- vh_PAK_0$'20_80'
vh_PHI <- vh_PHI_0$'20_80'
vh_THA <- vh_THA_0$'20_80'
vh_TUR <- vh_TUR_0$'20_80'
vh_VIE <- vh_VIE_0$'20_80'
vh_total_20 <- rbind(vh_BAN, vh_INI, vh_INO, vh_PAK, vh_PHI, vh_THA, vh_TUR, vh_VIE)
vh_BAN <- vh_BAN_0$'sd'
vh_INI <- vh_INI_0$'sd'
vh_INO <- vh_INO_0$'sd'
vh_PAK <- vh_PAK_0$'sd'
vh_PHI <- vh_PHI_0$'sd'
vh_THA <- vh_THA_0$'sd'
vh_TUR <- vh_TUR_0$'sd'
vh_VIE <- vh_VIE_0$'sd'
vh_total_var <- rbind(vh_BAN, vh_INI, vh_INO, vh_PAK, vh_PHI, vh_THA, vh_TUR, vh_VIE)
vh_total <- list(vh_total_5, vh_total_1, vh_total_20, vh_total_var)
write.xlsx(vh_total, "Figures/Table_2_Vertical_horizontal_equity.xlsx", append = TRUE)
normalize_new <- function(Incidence.X, Country.Name, limit_low, limit_up, step_0, XLAB = "", YLAB = "", ATX = element_text(size = 20), ATY = element_text(size = 20)){
#Incidence.X <- Incidence.X %>%
#  select(-value.urban, - value.rural)
Incidence.X <- Incidence.X %>%
rename(type = Type_0)%>%
mutate(Label_2 = ifelse(Country.Name == "Pakistan" & type == "TRSP" & Income_Group_5 > 3, round(pure,2), NA))
Incidence.X$help <- paste(Incidence.X$Income_Group_5, "_", Incidence.X$type)
if(Country.Name == "Thailand" | Country.Name == "Turkey" | Country.Name == "Indonesia" | Country.Name == "India") nudge_0 <- -0.25 else nudge_0 <- -0.25
P.1 <- ggplot(Incidence.X, aes(x = factor(Income_Group_5)))+
geom_hline(yintercept = 1, size = 1, colour = "black")+
#geom_ribbon(aes(ymin = low, ymax = upper, group = type, fill = type), alpha = 0.2)+
geom_label_repel(aes(y = 1,    group = type, segment.linetype = 1, label = label, segment.size = 1), size = 7, direction = "y", min.segment.length = 0, nudge_y = nudge_0)+
geom_label_repel(aes(y = 3,    group = type, segment.linetype = 1, label = Label_2, segment.size = 1), size = 7, direction = "y", min.segment.length = 0, nudge_y = -0.4)+
#geom_label_repel(aes(y = pure, group = type, segment.linetype = 1, label = label_emissions_coverage, segment.size = 1, size = 15), min.segment.length = 0, hjust = 1, force_pull = 0, nudge_x = 1)+
geom_line(aes( y = pure, group = type, colour = type, alpha = type), size = 1.5, position = position_dodge(0.2))+
geom_point(aes(y = pure, group = type, fill = type, shape = type, alpha = type), size = 5, colour = "black", position = position_dodge(0.2))+
scale_colour_npg(  labels = c("International Carbon Price","National Carbon Price", "Power Sector Instruments", "Electricity Sector Carbon Price", "Liquid Fuel Carbon Price")) +
scale_fill_npg  (  labels = c("International Carbon Price","National Carbon Price", "Power Sector Instruments", "Electricity Sector Carbon Price", "Liquid Fuel Carbon Price"))+
scale_shape_manual(labels = c("International Carbon Price","National Carbon Price", "Power Sector Instruments", "Electricity Sector Carbon Price", "Liquid Fuel Carbon Price"), values = c(21,22,23,24,25))+
scale_alpha_manual(labels = c("International Carbon Price","National Carbon Price", "Power Sector Instruments", "Electricity Sector Carbon Price", "Liquid Fuel Carbon Price"), values = c(0.5,0.5,1,0.5,0.5))+
labs(fill = "", colour = "", shape = "", alpha = "", linetype = "")+
theme_bw() +
scale_x_discrete(labels = c("1","2","3","4","5"))+
scale_y_continuous(breaks = seq(limit_low, limit_up, step_0))+
theme(axis.text.x = ATX, axis.text.y = ATY, axis.title = element_text(size = 25), legend.position = "bottom" , plot.title = element_text(size = 35), panel.border = element_rect(size = 1.5), panel.grid.major = element_line(size = 1))+
coord_cartesian(ylim = c(limit_low-0.0, (limit_up+0.0)))+
#guides(fill = guide_legend(nrow = 2, order = 1), colour = guide_legend(nrow = 2, order = 1), shape = guide_legend(nrow = 2, order = 1), alpha = FALSE, size = FALSE)+
guides(fill = FALSE, colour = FALSE, shape = FALSE, size = FALSE, alpha = FALSE)+
xlab(XLAB)+ylab(YLAB)+ ggtitle(Country.Name)
return(P.1)
}
P.1.BAN   <- normalize_new(Incidence.Bangladesh.2,  "Bangladesh",  0.5, 2.5, 0.50, ATX = element_blank(), YLAB = "Incidence normalized by first Quintile")
P.1.India <- normalize_new(Incidence.India.2,       "India",       0.5, 2.5, 0.50, ATX = element_blank(), ATY = element_blank())
P.1.IDN   <- normalize_new(Incidence.Indonesia.2,   "Indonesia",   0.5, 2.5, 0.50, ATX = element_blank(), ATY = element_blank())
P.1.PAK   <- normalize_new(Incidence.Pakistan.2,    "Pakistan",    0.5, 2.5, 0.50, ATX = element_blank(), ATY = element_blank())
P.1.PHI   <- normalize_new(Incidence.Philippines.2, "Philippines", 0.5, 2.5, 0.50, XLAB = "Expenditure Quintile", YLAB = "Incidence normalized by first Quintile")
P.1.THA   <- normalize_new(Incidence.Thailand.2,    "Thailand",    0.5, 2.5, 0.50, XLAB = "Expenditure Quintile", ATY = element_blank())
P.1.TUR   <- normalize_new(Incidence.Turkey.2,      "Turkey",      0.5, 2.5, 0.50, XLAB = "Expenditure Quintile", ATY = element_blank())
P.1.VIE   <- normalize_new(Incidence.Vietnam.2,     "Vietnam",     0.5, 2.5, 0.50, XLAB = "Expenditure Quintile", ATY = element_blank())
P.10 <- cowplot::align_plots(P.1.BAN, P.1.India, P.1.IDN, P.1.PAK, P.1.PHI, P.1.THA, P.1.TUR, P.1.VIE, align = "hv")
s.1 <- ggdraw(P.10[[1]])
s.2 <- ggdraw(P.10[[2]])
s.3 <- ggdraw(P.10[[3]])
s.4 <- ggdraw(P.10[[4]])
s.5 <- ggdraw(P.10[[5]])
s.6 <- ggdraw(P.10[[6]])
s.7 <- ggdraw(P.10[[7]])
s.8 <- ggdraw(P.10[[8]])
png("Figures/Figure_S10_SI_%d.png", width = 15, height = 16, unit = "cm", res = ppi)
s.1
s.2
s.3
s.4
s.5
s.6
s.7
s.8
dev.off()
rm(list=ls())
rm(list=ls())
